{
  "__inputs": [
    {
      "name": "DS_POSTGRESQL",
      "label": "PostgreSQL",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "gapit-htmlgraphics-panel",
      "name": "HTML graphics",
      "version": "2.1.1"
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.5.9"
    },
    {
      "type": "panel",
      "id": "orchestracities-map-panel",
      "name": "Orchestra Cities Map",
      "version": "1.4.4"
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "yesoreyeram-boomtheme-panel",
      "name": "Boom Theme",
      "version": "0.2.1"
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 8,
      "options": {
        "SVGBaseFix": true,
        "add100Percentage": true,
        "calcsMutation": "standard",
        "centerAlignContent": true,
        "codeData": "{\n  \"text\": \"Random text\"\n}",
        "css": ".container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: url('../public/img/logos/Img_sgp/HEADER-SGP-DARK.png'); /* Caminho atualizado para a sua imagem */\n  background-size: cover; /* Garante que a imagem cubra todo o container */\n  background-position: center; /* Centraliza a imagem de fundo */\n  border-radius: 20px;\n  font-family: Arial, sans-serif;\n  width: 2176px;\n  height: 65px;\n  color: white;\n  padding: 10px;\n}\n\n\n.info {\n  display: flex;\n  align-items: center;\n  /* justify-content: center; Removido para permitir que o ícone fique à esquerda */\n}\n\n.icon-query {\n    width: 35px; /* Largura do ícone */\n    height: 35px; /* Altura do ícone */\n    margin-right: 5%; /* Espaçamento à direita do ícone */\n}\n\n.icon {\n  width: 220px;\n  height: 100px;\n  margin-right: 10px;\n}\n\n.text {\n  font-size: 35px;\n  font-weight: bold;\n  flex-grow: 1;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-shadow: 5px 5px 5px rgba(0, 0, 0, 0.5);\n}\n\n\n\n.number-circle {\n  background-color: #165F8C; /* Cor de fundo ajustada */\n  color: #fcfcfc; /* Azul */\n  border-radius: 15px; /* Cantos arredondados */\n  width: 400px; /* Largura ajustada */\n  height: 60px; /* Altura ajustada */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px; /* Tamanho da fonte dos números aumentado */\n  font-weight: bold;\n}\n\n.box {\n  margin-left: 10px; /* Adiciona margem à esquerda do componente .box */\n  font-size: 25px; /* Ajusta o tamanho do texto para 18px dentro de .box */\n}\n",
        "dynamicData": false,
        "dynamicFieldDisplayValues": false,
        "dynamicHtmlGraphics": false,
        "dynamicProps": false,
        "html": "<!DOCTYPE html>\n<html>\n<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\">\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"info\">\n      <img src=\"../public/img/logos/Img_sgp/SGP-LOGO-BRANCA.png\" alt=\"Ícone\" class=\"icon\"/>\n      <div class=\"text center-text\">LOCALIZAÇÃO DO TÉCNICO</div>\n    </div>\n    <div class=\"number-circle\">\n      <img src=\"../public/img/logos/Img_sgp/24-hours-support.png\" alt=\"Ícone\" class=\"icon-query\"/>\n      <span class=\"uptime-label\">Total OS's em Execução: </span><div class=\"box\" id=\"htmlgraphics-value\"></div>\n    </div>\n  </div>\n</body>\n</html>\n",
        "onInit": "// Sets the text from customProperties\nconst htmlgraphicsText = htmlNode.getElementById('htmlgraphics-text');\n\nif (htmlgraphicsText) {\n  htmlgraphicsText.textContent = customProperties.text;\n\n  // Change the text color based on the theme\n  if (theme.isDark) {\n    htmlgraphicsText.style.color = 'green';\n  } else {\n    htmlgraphicsText.style.color = 'red';\n  }\n}\n",
        "onInitOnResize": false,
        "onRender": "// Sets the value from the first series on every refresh\nconst htmlgraphicsValue = htmlNode.getElementById('htmlgraphics-value');\n\nif (htmlgraphicsValue) {\n  const valueField = data.series[0]?.fields[0];\n  if (valueField) {\n    const length = valueField.values.length;\n    htmlgraphicsValue.textContent = valueField.values.get(length - 1);\n  } else {\n    htmlgraphicsValue.textContent = \"0\"\n  }\n}\n",
        "overflow": "visible",
        "panelupdateOnMount": true,
        "reduceOptions": {
          "calcs": [
            "lastNotNull",
            "last",
            "firstNotNull",
            "first",
            "min",
            "max",
            "mean",
            "sum",
            "count",
            "range",
            "delta",
            "step",
            "diff",
            "logmin",
            "allIsZero",
            "allIsNull",
            "diffperc"
          ]
        },
        "renderOnMount": true,
        "rootCSS": "",
        "useGrafanaScrollbar": true
      },
      "pluginVersion": "9.5.9",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH ranked_os AS (\r\n    SELECT \r\n        atendimento_os.id AS OS,\r\n        CONCAT(\r\n            TRIM(SUBSTRING(admcore_pessoa.nome FROM 1 FOR POSITION(' ' IN admcore_pessoa.nome))),\r\n            ' ',\r\n            TRIM(SUBSTRING(admcore_pessoa.nome FROM POSITION(' ' IN admcore_pessoa.nome) + 1 FOR POSITION(' ' IN SUBSTRING(admcore_pessoa.nome FROM POSITION(' ' IN admcore_pessoa.nome) + 1))))\r\n        ) AS cliente,\r\n        auth_user.username AS tecnico,\r\n        ed.logradouro AS rua,\r\n        atendimento_motivoos.descricao AS descricao,\r\n        EXTRACT(EPOCH FROM (atendimento_os.data_finalizacao - atendimento_os.data_checkin)) AS media_tempo_gasto_horas\r\n    FROM \r\n        atendimento_os\r\n        INNER JOIN atendimento_ocorrencia ON (atendimento_os.ocorrencia_id = atendimento_ocorrencia.id) \r\n        INNER JOIN auth_user ON (atendimento_os.responsavel_id = auth_user.id) \r\n        INNER JOIN atendimento_motivoos ON (atendimento_motivoos.id = atendimento_os.motivoos_id)\r\n        INNER JOIN admcore_clientecontrato ON (admcore_clientecontrato.id = atendimento_ocorrencia.clientecontrato_id)\r\n        INNER JOIN admcore_cliente ON (admcore_clientecontrato.cliente_id = admcore_cliente.id)\r\n        INNER JOIN admcore_pessoa ON (admcore_cliente.pessoa_id = admcore_pessoa.id)\r\n        JOIN public.admcore_endereco AS ed ON admcore_cliente.endereco_id = ed.id\r\n    WHERE \r\n     atendimento_os.status = 2\r\n)\r\nSELECT \r\n    COUNT(*) AS total_os_em_execucao\r\nFROM \r\n    ranked_os;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "transparent": true,
      "type": "gapit-htmlgraphics-panel"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 1,
        "w": 1,
        "x": 12,
        "y": 3
      },
      "id": 7,
      "options": {
        "activeTheme": "SGP",
        "disableThemePicker": true,
        "themes": [
          {
            "name": "SGP",
            "styles": [
              {
                "props": {
                  "theme": "default"
                },
                "type": "basetheme"
              },
              {
                "props": {
                  "url": "/public/img/logos/Img_sgp/FUNDOHOME.png"
                },
                "type": "bgimage"
              },
              {
                "props": {
                  "url": ""
                },
                "type": "url"
              },
              {
                "props": {
                  "text": "body {\n    background-color: rgb(4, 4, 15);\n}"
                },
                "type": "style"
              }
            ]
          }
        ]
      },
      "pluginVersion": "0.2.1",
      "transparent": true,
      "type": "yesoreyeram-boomtheme-panel"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "description": "-14.7973382,-39.2683465",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 23,
        "w": 10,
        "x": 14,
        "y": 3
      },
      "id": 1,
      "options": {
        "basemap": {
          "config": {},
          "type": "osm-standard"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showLayercontrol": true,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "cluster": true,
              "clusterDistance": 13,
              "clusterMinDistance": 3,
              "clusterValue": "size",
              "color": {
                "fixed": "dark-yellow"
              },
              "enableGradient": false,
              "enableShadow": false,
              "fillOpacity": 0.3,
              "iconSize": 18,
              "pinShape": "marker",
              "selectIcon": "fa-car",
              "shape": "circle",
              "showLegend": true,
              "showPin": true,
              "size": {
                "fixed": 6,
                "max": 15,
                "min": 2
              }
            },
            "displayProperties": [
              "os",
              "cliente",
              "cidade",
              "bairro",
              "logradouro",
              "numero",
              "descricao"
            ],
            "location": {
              "mode": "auto"
            },
            "name": "Jerlan",
            "query": "jerlan",
            "titleField": "tecnico",
            "type": "markers"
          },
          {
            "config": {
              "cluster": false,
              "clusterDistance": 20,
              "clusterMinDistance": 0,
              "clusterValue": "size",
              "color": {
                "fixed": "dark-orange"
              },
              "enableGradient": false,
              "enableShadow": false,
              "fillOpacity": 0.3,
              "iconSize": 18,
              "pinShape": "marker",
              "selectIcon": "fa-car",
              "shape": "circle",
              "showLegend": true,
              "showPin": true,
              "size": {
                "fixed": 6,
                "max": 15,
                "min": 2
              }
            },
            "displayProperties": [
              "os",
              "cliente",
              "cidade",
              "bairro",
              "logradouro",
              "numero",
              "descricao"
            ],
            "location": {
              "mode": "auto"
            },
            "name": "Caue",
            "query": "caueoliveira",
            "titleField": "tecnico",
            "type": "markers"
          },
          {
            "config": {
              "cluster": false,
              "clusterDistance": 20,
              "clusterMinDistance": 0,
              "clusterValue": "size",
              "color": {
                "fixed": "dark-green"
              },
              "enableGradient": false,
              "enableShadow": false,
              "fillOpacity": 0.4,
              "iconSize": 18,
              "pinShape": "marker",
              "selectIcon": "fa-car",
              "shape": "circle",
              "showLegend": true,
              "showPin": true,
              "size": {
                "fixed": 6,
                "max": 15,
                "min": 2
              }
            },
            "displayProperties": [
              "os",
              "cliente",
              "cidade",
              "bairro",
              "logradouro",
              "numero",
              "descricao"
            ],
            "location": {
              "mode": "auto"
            },
            "name": "Marcos",
            "query": "marcosbarbosa",
            "titleField": "tecnico",
            "type": "markers"
          }
        ],
        "view": {
          "id": "coords",
          "lat": -14.252706,
          "lon": -39.166565,
          "zoom": 12.74
        }
      },
      "pluginVersion": "9.5.9",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n atendimento_os.id AS OS,\r\n CONCAT(split_part(admcore_pessoa.nome, ' ', 1), ' ', split_part(admcore_pessoa.nome, ' ', 3)) as CLIENTE,\r\n split_part(upper(auth_user.username), '_', 1) AS TECNICO,\r\n atendimento_os.latitude,\r\n atendimento_os.longitude,\r\n ed.cidade,\r\n ed.bairro,\r\n ed.logradouro,\r\n ed.numero,\r\n atendimento_motivoos.descricao\r\n FROM atendimento_os\r\n INNER JOIN atendimento_ocorrencia ON (atendimento_os.ocorrencia_id = atendimento_ocorrencia.id) \r\n INNER JOIN auth_user ON (atendimento_os.responsavel_id = auth_user.id) \r\n INNER JOIN atendimento_motivoos ON (atendimento_motivoos.id = atendimento_os.motivoos_id)\r\n INNER JOIN admcore_clientecontrato  ON (admcore_clientecontrato.id = atendimento_ocorrencia.clientecontrato_id)\r\n INNER JOIN admcore_cliente ON (admcore_clientecontrato.cliente_id = admcore_cliente.id)\r\n INNER JOIN admcore_pessoa ON (admcore_cliente.pessoa_id = admcore_pessoa.id)\r\n JOIN public.admcore_endereco AS ed ON admcore_cliente.endereco_id = ed.id\r\n where auth_user.username like '%jerlan%' and atendimento_os.status = 2\r\n limit 1\r\n ",
          "refId": "jerlan",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \r\n atendimento_os.id AS OS,\r\n admcore_pessoa.nome as CLIENTE,\r\n replace(auth_user.username, 'gustavoramos', ' GUSTAVO') AS TECNICO,\r\n atendimento_os.latitude,\r\n atendimento_os.longitude,\r\n ed.cidade,\r\n ed.bairro,\r\n ed.logradouro,\r\n ed.numero,\r\n atendimento_motivoos.descricao\r\n FROM atendimento_os\r\n INNER JOIN atendimento_ocorrencia ON (atendimento_os.ocorrencia_id = atendimento_ocorrencia.id) \r\n INNER JOIN auth_user ON (atendimento_os.responsavel_id = auth_user.id) \r\n INNER JOIN atendimento_motivoos ON (atendimento_motivoos.id = atendimento_os.motivoos_id)\r\n INNER JOIN admcore_clientecontrato  ON (admcore_clientecontrato.id = atendimento_ocorrencia.clientecontrato_id)\r\n INNER JOIN admcore_cliente ON (admcore_clientecontrato.cliente_id = admcore_cliente.id)\r\n INNER JOIN admcore_pessoa ON (admcore_cliente.pessoa_id = admcore_pessoa.id)\r\n JOIN public.admcore_endereco AS ed ON admcore_cliente.endereco_id = ed.id\r\n where auth_user.username like '%caueoliveira%' and atendimento_os.status = 2\r\n limit 1",
          "refId": "caueoliveira",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \r\n atendimento_os.id AS OS,\r\n admcore_pessoa.nome as CLIENTE,\r\n replace(auth_user.username, 'gustavoramos', ' GUSTAVO') AS TECNICO,\r\n atendimento_os.latitude,\r\n atendimento_os.longitude,\r\n ed.cidade,\r\n ed.bairro,\r\n ed.logradouro,\r\n ed.numero,\r\n atendimento_motivoos.descricao\r\n FROM atendimento_os\r\n INNER JOIN atendimento_ocorrencia ON (atendimento_os.ocorrencia_id = atendimento_ocorrencia.id) \r\n INNER JOIN auth_user ON (atendimento_os.responsavel_id = auth_user.id) \r\n INNER JOIN atendimento_motivoos ON (atendimento_motivoos.id = atendimento_os.motivoos_id)\r\n INNER JOIN admcore_clientecontrato  ON (admcore_clientecontrato.id = atendimento_ocorrencia.clientecontrato_id)\r\n INNER JOIN admcore_cliente ON (admcore_clientecontrato.cliente_id = admcore_cliente.id)\r\n INNER JOIN admcore_pessoa ON (admcore_cliente.pessoa_id = admcore_pessoa.id)\r\n JOIN public.admcore_endereco AS ed ON admcore_cliente.endereco_id = ed.id\r\n where auth_user.username like '%marcosbarbosa%' and atendimento_os.status = 2\r\n limit 1",
          "refId": "marcosbarbosa",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "cliente": "CLIENTE",
              "descricao": "Descrição",
              "os": "O.S",
              "rua": "ENDEREÇO",
              "tecnico": ""
            }
          }
        }
      ],
      "transparent": true,
      "type": "orchestracities-map-panel"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 14,
        "x": 0,
        "y": 4
      },
      "id": 5,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"font-size:26px;text-align:center;font-family:Arial;\nbackground: linear-gradient(90deg, #00146C,#003366);\ncolor:white;border-radius: 10px 10px 10px 10px; text-shadow: 5px 5px 5px rgba(0, 0, 0, 0.5)\"> \nOS's  EM EXECUÇÃO\n</div>\n",
        "mode": "html"
      },
      "pluginVersion": "9.5.9",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "color-background"
            },
            "inspect": false
          },
          "mappings": [],
          "noValue": "SEM O.S EM EXECUÇÃO",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#003366",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "O.S:"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TÉCNICO:"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TEMPO DECORRIDO:"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 170
              },
              {
                "id": "unit",
                "value": "dthms"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 14,
        "x": 0,
        "y": 6
      },
      "id": 2,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "9.5.9",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH ranked_os AS (\r\n    SELECT \r\n        atendimento_os.id AS OS,\r\n        CONCAT(split_part(admcore_pessoa.nome, ' ', 1), ' ', split_part(admcore_pessoa.nome, ' ', 3)) as CLIENTE,\r\n        split_part(upper(auth_user.username), '_', 1) AS TECNICO,\r\n        ed.logradouro AS RUA,\r\n        atendimento_motivoos.descricao,\r\n        EXTRACT(EPOCH FROM (NOW() - atendimento_os.data_checkin)) AS tempo_decorrido,\r\n        ROW_NUMBER() OVER (PARTITION BY auth_user.id ORDER BY atendimento_os.id DESC) AS row_num\r\n    FROM \r\n        atendimento_os\r\n        INNER JOIN atendimento_ocorrencia ON (atendimento_os.ocorrencia_id = atendimento_ocorrencia.id) \r\n        INNER JOIN auth_user ON (atendimento_os.responsavel_id = auth_user.id) \r\n        INNER JOIN atendimento_motivoos ON (atendimento_motivoos.id = atendimento_os.motivoos_id)\r\n        INNER JOIN admcore_clientecontrato ON (admcore_clientecontrato.id = atendimento_ocorrencia.clientecontrato_id)\r\n        INNER JOIN admcore_cliente ON (admcore_clientecontrato.cliente_id = admcore_cliente.id)\r\n        INNER JOIN admcore_pessoa ON (admcore_cliente.pessoa_id = admcore_pessoa.id)\r\n        JOIN public.admcore_endereco AS ed ON admcore_cliente.endereco_id = ed.id\r\n    WHERE \r\n        atendimento_os.status = 2\r\n)\r\nSELECT \r\n    OS,\r\n    CLIENTE,\r\n    UPPER(TECNICO) AS TECNICO,\r\n    RUA,\r\n    tempo_decorrido,\r\n    descricao\r\nFROM \r\n    ranked_os\r\nWHERE \r\n    row_num <= 2\r\n ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "descricao": true
            },
            "indexByName": {},
            "renameByName": {
              "cliente": "CLIENTE:",
              "descricao": "DESCRIÇÃO:",
              "media_tempo_gasto_horas": "TEMPO MÉDIO:",
              "os": "O.S:",
              "rua": "RUA:",
              "tecnico": "TÉCNICO:",
              "tempo_decorrido": "TEMPO DECORRIDO:"
            }
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 14,
        "x": 0,
        "y": 13
      },
      "id": 6,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"font-size:26px;text-align:center;font-family:Arial;\nbackground: linear-gradient(90deg, #00146C,#003366);\ncolor:white;border-radius: 10px 10px 10px 10px; text-shadow: 5px 5px 5px rgba(0, 0, 0, 0.5)\"> \nOS's  ENCERRADAS\n</div>\n",
        "mode": "html"
      },
      "pluginVersion": "9.5.9",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "color-background"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#003366",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "O.S:"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TÉCNICO:"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TEMPO MÉDIO:"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 120
              },
              {
                "id": "unit",
                "value": "dthms"
              },
              {
                "id": "noValue",
                "value": "N/A"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 14,
        "x": 0,
        "y": 15
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true
      },
      "pluginVersion": "9.5.9",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "\r\n    SELECT \r\n        atendimento_os.id AS OS,\r\n        atendimento_os.data_finalizacao,\r\n        CONCAT(split_part(admcore_pessoa.nome, ' ', 1), ' ', split_part(admcore_pessoa.nome, ' ', 3)) as CLIENTE,\r\n        split_part(upper(auth_user.username), '_', 1) AS TECNICO,\r\n        ed.logradouro AS RUA,\r\n        atendimento_motivoos.descricao,\r\n        --atendimento_motivoos.descricao AS DESCRICAO,\r\n        EXTRACT(EPOCH FROM (atendimento_os.data_finalizacao - atendimento_os.data_checkin)) AS media_tempo_gasto_horas\r\n    FROM \r\n        atendimento_os\r\n        INNER JOIN atendimento_ocorrencia ON (atendimento_os.ocorrencia_id = atendimento_ocorrencia.id) \r\n        INNER JOIN auth_user ON (atendimento_os.responsavel_id = auth_user.id) \r\n        INNER JOIN atendimento_motivoos ON (atendimento_motivoos.id = atendimento_os.motivoos_id)\r\n        INNER JOIN admcore_clientecontrato ON (admcore_clientecontrato.id = atendimento_ocorrencia.clientecontrato_id)\r\n        INNER JOIN admcore_cliente ON (admcore_clientecontrato.cliente_id = admcore_cliente.id)\r\n        INNER JOIN admcore_pessoa ON (admcore_cliente.pessoa_id = admcore_pessoa.id)\r\n        JOIN public.admcore_endereco AS ed ON admcore_cliente.endereco_id = ed.id\r\n    WHERE \r\n        atendimento_os.status = 1 and atendimento_os.data_finalizacao >= current_date - interval '30 day'\r\n    order by atendimento_os.data_finalizacao desc\r\n ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "cliente": "CLIENTE:",
              "descricao": "DESCRIÇÃO:",
              "media_tempo_gasto_horas": "TEMPO MÉDIO:",
              "os": "O.S:",
              "rua": "RUA:",
              "tecnico": "TÉCNICO:"
            }
          }
        }
      ],
      "transparent": true,
      "type": "table"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "sgp",
    "localiza técnico"
  ],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Localiza Técnico",
  "uid": "f393a2bd-ca99-445c-a9a4-7b43118b5361",
  "version": 6,
  "weekStart": ""
}